@page "/users/create"
@inject BlazorApp3.Model.TournamentContext DB
@using BlazerApp3.Services
@using BlazerApp3.Models.DTOs
@using BlazerApp3.Services
@using BlazorApp3.Model
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@using BlazorApp3.Services;
@using System.Security.Cryptography
@using System.Text
@using Microsoft.AspNetCore.Authorization
@inject IUsersService usersService

@using Microsoft.AspNetCore.Antiforgery
@attribute [RequireAntiforgeryToken(required: false)]

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>User</h4>
<hr />

<div class="row">
    <div class="col-md-4">
       
        <EditForm Model="UserRegisterModel" OnValidSubmit="CreateUser" FormName="create" >
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <input type="hidden" value="1" id="role"/>
            
            <ValidationSummary class="text-danger" />
            <div class="form-group">
                <label>User Name</label>
                <InputText @bind-Value="UserRegisterModel.Username" class="form-control"></InputText>
                <ValidationMessage For="()=>UserRegisterModel.Username"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText type="password" @bind-Value="UserRegisterModel.Password" class="form-control"></InputText>
                <ValidationMessage For="()=>UserRegisterModel.Password"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Confirm Password</label>
                <InputText type="password" @bind-Value="UserRegisterModel.ConfirmPassword" class="form-control"></InputText>
                <ValidationMessage For="()=>UserRegisterModel.ConfirmPassword"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Display Name</label>
                <InputText @bind-Value="UserRegisterModel.DisplayName" class="form-control"></InputText>
                <ValidationMessage For="()=>UserRegisterModel.DisplayName"></ValidationMessage>
            </div>
            <div class=form-group">
                <label>Role</label>
                <select @bind-Value="UserRegisterModel.Role" class="form-control">
                    @{
                            foreach (var item in DB.Roles)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                      }
                </select>
                <ValidationMessage For="()=>UserRegisterModel.DisplayName"/>
             </div> 
            <div class="form-group">
                <button class="btn btn-primary">Register</button>
            </div>
            
        </EditForm>
    </div>
    
</div>

<div>
    <a href="/users">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    private UserRegisterDTO UserRegisterModel { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task CreateUser()
    {
        UserRegisterModel = await usersService.CreateUserAsync(UserRegisterModel);
        NavigationManager.NavigateTo("/users");
    }

 }
