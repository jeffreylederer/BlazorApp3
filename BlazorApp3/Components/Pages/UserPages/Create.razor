@page "/users/create"

@using BlazerApp3.Models.DTOs
@using BlazerApp3.Services
@using BlazorApp3.Model
@using Microsoft.AspNetCore.Components.Authorization

@inject BlazorApp3.Model.TournamentContext DB
@inject NavigationManager NavigationManager
@inject IUsersService usersService

<PageTitle>Create</PageTitle>

<CascadingAuthenticationState>
    <AuthorizeView Roles="SiteAdmin" Context="a">
        <NotAuthorized>
            <p>Not authorized to view this page<br /></p>
        </NotAuthorized>
        <Authorized>


<h1>Create</h1>

<h4>User</h4>
<hr />

<div class="row">
    <div class="col-md-4">
       
        <EditForm Model="@UserRegisterModel" OnValidSubmit="CreateUser" FormName="create" Enhance>
            <DataAnnotationsValidator></DataAnnotationsValidator>
               <ValidationSummary class="text-danger" />
            <div class="form-group">
                <label>User Name</label>
                <InputText  @bind-Value="UserRegisterModel.Username" id="Username" class="form-control"></InputText>
                <ValidationMessage For="()=>UserRegisterModel.Username"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText type="password"  @bind-Value="UserRegisterModel.Password" id="Password" class="form-control"></InputText>
                <ValidationMessage For="()=>UserRegisterModel.Password"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Confirm Password</label>
                <InputText type="password"  @bind-Value="UserRegisterModel.ConfirmPassword" id="ConfirmPassword" class="form-control"></InputText>
                <ValidationMessage For="()=>UserRegisterModel.ConfirmPassword"></ValidationMessage>
            </div>
           <div class="form-group">
                <label>Display Name</label>
                <InputText  @bind-Value="UserRegisterModel.DisplayName" class="form-control" id="DisplayName"></InputText>
                <ValidationMessage For="()=>UserRegisterModel.DisplayName"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Role</label>
                <select id="role" @bind="@UserRegisterModel.Role" class="form-control">
                    @{
                        foreach (var item in DB.Roles.ToList())
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                </select>
               
             </div>  
            <div class="form-group">
                <button class="btn btn-primary">Register</button>
            </div>
            
        </EditForm>
    </div>
    
</div>

<div>
    <a href="/users">Back to List</a>
</div>
  </Authorized>
</AuthorizeView>
</CascadingAuthenticationState>

@code {

    [SupplyParameterFromForm]
    private UserRegisterDTO UserRegisterModel { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task CreateUser()
    {
        UserRegisterModel = await usersService.CreateUserAsync(UserRegisterModel);
        NavigationManager.NavigateTo("/users");
    }

   

 }
